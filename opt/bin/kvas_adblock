#!/bin/sh

. /opt/bin/kvas_lib_main

#adblock_file="/opt/etc/adblock.dnsmasq"
tmp_path="/opt/tmp/adblock"
tmp_file="/opt/tmp/hosts.tmp"
adhosts_file="${tmp_path}/hosts"
error_source="/opt/tmp/kvas.err.log"
main_hosts_file="/opt/etc/hosts"
ads_sources_file="/opt/etc/adblock.sources"
grepv="#|^$|localhost| local|broadcasthost|loopback|localnet|mcastprefix|allnodes|allrouters|allhosts| 0.0.0.0"

! [ -f "${ads_sources_file}" ] && error "Файл с ссылками на списки блокировки рекламы отсутствует."; exit 0

exclude_com="$(cat < '/opt/etc/hosts.list' | tr -d '*' | sed ':a;N;$!ba;s/\n/$| /g')$"
exclude_www="www.$(cat < '/opt/etc/hosts.list' | tr -d '*' | sed ':a;N;$!ba;s/\n/$| www./g')$"
exclude_all="${exclude_com}|${exclude_www}"

rm -rf "${tmp_path}"; mkdir -p "${tmp_path}"
#cat /dev/null > "${adblock_file}"
score=0
hosts=0

[ -f "${error_source}" ] && rm -f "${error_source}"

[ -z "${1}" ] && echo "Загрузка хостов для блокировки из источников..."
print_line

total=$(cat < "${ads_sources_file}" | sed '/^$/d; /^#/d' | wc -l )
while read -r source || [ -n "${source}" ]; do

	[  -z "${source}" ] && continue
	[ "${source::1}" = "#" ] && continue

	score=$((score+1))
	curl "${source}" -o "${tmp_file}" &>/dev/null

#	пропускаем все файлы с html кодом
	if [ -n "$(grep -E '<html>|<head>|<body>' "${tmp_file}")" ]; then
		echo "${source}" >> ${error_source}
		rm -f "${tmp_file}";
		continue
	fi

	cat < "${tmp_file}" | grep -vE "${grepv}" >> "${adhosts_file}"
	progress_bar "${score}" "${total}" ""

done < "${ads_sources_file}"
printf "\n"
print_line

# блокируем различные популярные в РФ счетчики и определители IP
cat <<EOF >> "${adhosts_file}"
0.0.0.0 ezstat.ru
0.0.0.0 iplogger.org
0.0.0.0 2no.co
0.0.0.0 iplogger.com
0.0.0.0 iplogger.ru
0.0.0.0 yip.su
0.0.0.0 iplogger.co
0.0.0.0 iplogger.info
0.0.0.0 ipgrabber.ru
0.0.0.0 ipgraber.ru
0.0.0.0 iplis.ru
0.0.0.0 02ip.ru
EOF

if [ -f ${error_source} ]; then
	error "Следующие ссылки не корректны и содержат HTML код"
	error " Отредактируйте должным образом ${ads_sources_file}"
	print_line
fi

ready "Сортировка и удаление дубликатов"
nlines_all=$(cat < "${adhosts_file}" | wc -l)
cat < "${adhosts_file}" | sort -u > ${tmp_file}
when_ok "ГОТОВО"

ready "Исключаем из списка блокировки хосты из белого списка"
nlines_sorted=$(cat < "${tmp_file}" | wc -l)
cat < "${tmp_file}" | grep -vE "${exclude_all}" > "${adhosts_file}"
when_ok "ГОТОВО"

ready "Проверяем на ошибки скаченные файлы"
nlines_excluded=$(cat < "${adhosts_file}" | wc -l)
/opt/sbin/dnsmasq --test --hostsdir="${tmp_path}"  &> /dev/null
if [ "$?" == "0" ]; then
	when_ok "ГОТОВО"
	logger "Рекламных хостов для блокировки добавлено $(dig_frm ${hosts}) шт."
else
	when_bad "ОШИБКИ"
	error "Проверьте файл ${adhosts_file} на ошибки"
fi

print_line
nlines_srt=$((nlines_all - nlines_sorted))
nlines_exc=$((nlines_sorted - nlines_excluded))

nlines_all_txt=$(dig_frm "${nlines_all}")
nlines_srt_txt=$(dig_frm "${nlines_srt}")
nlines_exc_txt=$(dig_frm "${nlines_exc}")
nlines_add_txt=$(dig_frm "${nlines_excluded}")

ready "Скачено хостов для блокировки рекламы"; when_alert "${nlines_all_txt}"
ready "Количество удаленных дубликатов"; when_alert "${nlines_srt_txt}"
ready "Исключено записей из списка блокировки"; when_alert "${nlines_exc_txt}"
ready "Добавлено всего хостов для блокировки рекламы"; when_alert "${nlines_add_txt}"

/opt/etc/init.d/S56dnsmasq restart &> /dev/null